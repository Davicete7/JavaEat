package InterfazJavaEat;


/**
 * @author David Sánchez
 */


//IMPORTES
import ClasesJavaEat.Restaurante;
import ClasesJavaEat.Sistema;
import java.awt.Color;
import java.io.Serializable;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;



/**
 * -Clase encargada de calificar un {@link Restaurante}.
 * @author David Sanchez
 * @version 1.0
 * @since 23/05/2023
 * @see Restaurante
 * @see Sistema
 * @see Color
 * @see Serializable
 * @see ArrayList
 * @see DefaultListModel
 * @see ImageIcon
 * @see JOptionPane
 */
public class CalificarRestauranteEmpresa extends javax.swing.JFrame implements Serializable {

    int xMouse,yMouse;
    DefaultListModel modeloRestaurantes = new DefaultListModel();           //Creamos un modelo para restaurantesLista(JList)
    
    
    public CalificarRestauranteEmpresa() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        
        //Actualizamos los datos como siempre
        Sistema.cargarDatosClientes();
        Sistema.cargarDatosEmpresas();
        Sistema.cargarDatosRestaurantes();
        Sistema.cargarDatosComidas();
        Sistema.cargarDatosVentasClientes();
        Sistema.cargarDatosVentasEmpresas();
        Sistema.cargarDatosVentasCatering();
        
        
        //Le damos un modelo a usuariosLista(JList) y a restaurantesLista(JList)
        restaurantesLista.setModel(modeloRestaurantes);
        
        
        //Quitamos todos los datos que haya en las dos listas (Para poner los actalizados)
        modeloRestaurantes.removeAllElements();
        
        /*
        Añadimos ahora todos los restaurantes(Se puede hacer todo en una sola linea de codigo para ahorrar espacio 
        en memoria pero se a optado por obtener mejor claridad).
        */
        for (Restaurante restaurante : Sistema.getListaRestaurantes()) 
        {
            
            String cif = restaurante.getCif();
            String nombre = restaurante.getNombre();
            String especialidad = restaurante.getEspecialidad();
            String calificacion = restaurante.getCalificacion();

            String txt = cif+", perteneciente al restaurante: "+nombre
                    +" con especialidad en "+especialidad+" tiene una calificacion media de "+calificacion+" puntos.";
            
            modeloRestaurantes.addElement(txt);
        }
        
        
        //Creamos el botonGruop
        calificacionesBotonGroup.add(unaEstrellaRBoton);
        calificacionesBotonGroup.add(dosEstrellaRBoton);
        calificacionesBotonGroup.add(tresEstrellaRBoton);
        calificacionesBotonGroup.add(cuatroEstrellaRBoton);
        calificacionesBotonGroup.add(cincoEstrellaRBoton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calificacionesBotonGroup = new javax.swing.ButtonGroup();
        background = new javax.swing.JPanel();
        FondoVerdeDerecha = new javax.swing.JPanel();
        eatsTexto = new javax.swing.JLabel();
        cerrarSesionTexto = new javax.swing.JLabel();
        atrasBoton = new javax.swing.JButton();
        javaTexto = new javax.swing.JLabel();
        calificarBoton = new javax.swing.JButton();
        BarraFunciones = new javax.swing.JPanel();
        botonExit = new javax.swing.JPanel();
        exitTexto = new javax.swing.JLabel();
        seleccioneUnRestaurantetexto = new javax.swing.JLabel();
        seleccioneUnRestaurantetexto1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantesLista = new javax.swing.JList<>();
        unaEstrellaRBoton = new javax.swing.JRadioButton();
        dosEstrellaRBoton = new javax.swing.JRadioButton();
        tresEstrellaRBoton = new javax.swing.JRadioButton();
        cuatroEstrellaRBoton = new javax.swing.JRadioButton();
        cincoEstrellaRBoton = new javax.swing.JRadioButton();
        unaEstrella = new javax.swing.JLabel();
        dosEstrellas = new javax.swing.JLabel();
        tresEstrellas = new javax.swing.JLabel();
        cuatroEstrellas = new javax.swing.JLabel();
        cincoEstrellas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FondoVerdeDerecha.setBackground(new java.awt.Color(6, 193, 103));

        eatsTexto.setFont(new java.awt.Font("Roboto Black", 0, 48)); // NOI18N
        eatsTexto.setForeground(new java.awt.Color(0, 0, 0));
        eatsTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eatsTexto.setText("EATS");

        cerrarSesionTexto.setBackground(new java.awt.Color(255, 255, 255));
        cerrarSesionTexto.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        cerrarSesionTexto.setForeground(new java.awt.Color(0, 0, 0));
        cerrarSesionTexto.setText("Cerrar Sesión");
        cerrarSesionTexto.setBorder(null);
        cerrarSesionTexto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrarSesionTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarSesionTextoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cerrarSesionTextoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cerrarSesionTextoMouseExited(evt);
            }
        });

        atrasBoton.setBackground(new java.awt.Color(6, 193, 103));
        atrasBoton.setFont(new java.awt.Font("Roboto Black", 2, 18)); // NOI18N
        atrasBoton.setForeground(new java.awt.Color(0, 0, 0));
        atrasBoton.setBorder(null);
        atrasBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atrasBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atrasBotonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                atrasBotonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                atrasBotonMouseExited(evt);
            }
        });
        atrasBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasBotonActionPerformed(evt);
            }
        });

        javaTexto.setFont(new java.awt.Font("Roboto Black", 0, 36)); // NOI18N
        javaTexto.setForeground(new java.awt.Color(0, 0, 0));
        javaTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        javaTexto.setText("JAVA");

        calificarBoton.setBackground(new java.awt.Color(6, 193, 103));
        calificarBoton.setFont(new java.awt.Font("Roboto Black", 2, 18)); // NOI18N
        calificarBoton.setForeground(new java.awt.Color(0, 0, 0));
        calificarBoton.setText("CALIFICAR");
        calificarBoton.setBorder(null);
        calificarBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calificarBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                calificarBotonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                calificarBotonMouseExited(evt);
            }
        });
        calificarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calificarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FondoVerdeDerechaLayout = new javax.swing.GroupLayout(FondoVerdeDerecha);
        FondoVerdeDerecha.setLayout(FondoVerdeDerechaLayout);
        FondoVerdeDerechaLayout.setHorizontalGroup(
            FondoVerdeDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eatsTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoVerdeDerechaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(FondoVerdeDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atrasBoton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(javaTexto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoVerdeDerechaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(FondoVerdeDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoVerdeDerechaLayout.createSequentialGroup()
                        .addComponent(cerrarSesionTexto)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FondoVerdeDerechaLayout.createSequentialGroup()
                        .addComponent(calificarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
        );
        FondoVerdeDerechaLayout.setVerticalGroup(
            FondoVerdeDerechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FondoVerdeDerechaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cerrarSesionTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(javaTexto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eatsTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(calificarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(atrasBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        atrasBoton.setIcon(new ImageIcon("Imagenes/logoAtras.png"));

        background.add(FondoVerdeDerecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, 280, 550));

        BarraFunciones.setBackground(new java.awt.Color(255, 255, 255));
        BarraFunciones.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BarraFuncionesMouseDragged(evt);
            }
        });
        BarraFunciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BarraFuncionesMousePressed(evt);
            }
        });

        botonExit.setBackground(new java.awt.Color(255, 255, 255));

        exitTexto.setBackground(new java.awt.Color(255, 255, 255));
        exitTexto.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        exitTexto.setForeground(new java.awt.Color(0, 0, 0));
        exitTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitTexto.setText("X");
        exitTexto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitTextoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitTextoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitTextoMouseExited(evt);
            }
        });

        javax.swing.GroupLayout botonExitLayout = new javax.swing.GroupLayout(botonExit);
        botonExit.setLayout(botonExitLayout);
        botonExitLayout.setHorizontalGroup(
            botonExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonExitLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        botonExitLayout.setVerticalGroup(
            botonExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitTexto, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout BarraFuncionesLayout = new javax.swing.GroupLayout(BarraFunciones);
        BarraFunciones.setLayout(BarraFuncionesLayout);
        BarraFuncionesLayout.setHorizontalGroup(
            BarraFuncionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BarraFuncionesLayout.createSequentialGroup()
                .addComponent(botonExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        BarraFuncionesLayout.setVerticalGroup(
            BarraFuncionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BarraFuncionesLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        background.add(BarraFunciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 40));

        seleccioneUnRestaurantetexto.setFont(new java.awt.Font("Roboto Black", 0, 36)); // NOI18N
        seleccioneUnRestaurantetexto.setForeground(new java.awt.Color(0, 0, 0));
        seleccioneUnRestaurantetexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        seleccioneUnRestaurantetexto.setText("Seleccione un restaurante");
        background.add(seleccioneUnRestaurantetexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 430, -1));

        seleccioneUnRestaurantetexto1.setFont(new java.awt.Font("Roboto Black", 0, 36)); // NOI18N
        seleccioneUnRestaurantetexto1.setForeground(new java.awt.Color(0, 0, 0));
        seleccioneUnRestaurantetexto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        seleccioneUnRestaurantetexto1.setText("Puntuelo de 1 a 5 estrellas(puntos)");
        background.add(seleccioneUnRestaurantetexto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 300, 610, 40));
        background.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 520, 30));
        background.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 610, 40));

        restaurantesLista.setBackground(new java.awt.Color(6, 193, 103));
        restaurantesLista.setFont(new java.awt.Font("Roboto Medium", 2, 12)); // NOI18N
        restaurantesLista.setForeground(new java.awt.Color(0, 0, 0));
        restaurantesLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        restaurantesLista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(restaurantesLista);

        background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 520, 170));

        unaEstrellaRBoton.setForeground(new java.awt.Color(0, 0, 0));
        unaEstrellaRBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unaEstrellaRBotonActionPerformed(evt);
            }
        });
        background.add(unaEstrellaRBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        dosEstrellaRBoton.setForeground(new java.awt.Color(0, 0, 0));
        dosEstrellaRBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosEstrellaRBotonActionPerformed(evt);
            }
        });
        background.add(dosEstrellaRBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, -1, -1));

        tresEstrellaRBoton.setForeground(new java.awt.Color(0, 0, 0));
        tresEstrellaRBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresEstrellaRBotonActionPerformed(evt);
            }
        });
        background.add(tresEstrellaRBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, -1, -1));

        cuatroEstrellaRBoton.setForeground(new java.awt.Color(0, 0, 0));
        cuatroEstrellaRBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuatroEstrellaRBotonActionPerformed(evt);
            }
        });
        background.add(cuatroEstrellaRBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, -1, -1));

        cincoEstrellaRBoton.setForeground(new java.awt.Color(0, 0, 0));
        cincoEstrellaRBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoEstrellaRBotonActionPerformed(evt);
            }
        });
        background.add(cincoEstrellaRBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 490, -1, -1));
        background.add(unaEstrella, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 50, 50));
        unaEstrella.setIcon(new ImageIcon("Imagenes/1Estrella.png"));
        background.add(dosEstrellas, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 120, 50));
        dosEstrellas.setIcon(new ImageIcon("Imagenes/2Estrella.png"));
        background.add(tresEstrellas, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 210, 50));
        tresEstrellas.setIcon(new ImageIcon("Imagenes/3Estrella.png"));
        background.add(cuatroEstrellas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 230, 50));
        cuatroEstrellas.setIcon(new ImageIcon("Imagenes/4Estrella.png"));
        background.add(cincoEstrellas, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 470, 250, 50));
        cincoEstrellas.setIcon(new ImageIcon("Imagenes/5Estrella.png"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BarraFuncionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarraFuncionesMousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
        
    }//GEN-LAST:event_BarraFuncionesMousePressed

    private void BarraFuncionesMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarraFuncionesMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_BarraFuncionesMouseDragged

    private void exitTextoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTextoMouseClicked
        // TODO add your handling code here:
        System.exit(0);
        
    }//GEN-LAST:event_exitTextoMouseClicked

    private void exitTextoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTextoMouseEntered
        // TODO add your handling code here:
        botonExit.setBackground(Color.red);
        exitTexto.setForeground(Color.WHITE);
    }//GEN-LAST:event_exitTextoMouseEntered

    private void exitTextoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitTextoMouseExited
        // TODO add your handling code here:
        botonExit.setBackground(Color.WHITE);
        exitTexto.setForeground(Color.BLACK);
    }//GEN-LAST:event_exitTextoMouseExited

    private void cerrarSesionTextoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarSesionTextoMouseClicked
        // TODO add your handling code here:

        //Le advertimos de lo que va a hacer
        int respuestaUsuario = JOptionPane.showConfirmDialog(this, "¿Seguro que desea cerrar sesion?", "CERRAR SESIÓN"
            ,JOptionPane.YES_NO_OPTION );
        if(respuestaUsuario == JOptionPane.YES_OPTION)
        {
            //Le llevamos a la ventana de Inicio de sesion.
            InicioSesion cerrarSesion = new InicioSesion();
            cerrarSesion.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_cerrarSesionTextoMouseClicked

    private void cerrarSesionTextoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarSesionTextoMouseEntered
        // TODO add your handling code here:
        cerrarSesionTexto.setForeground(Color.RED);
    }//GEN-LAST:event_cerrarSesionTextoMouseEntered

    private void cerrarSesionTextoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarSesionTextoMouseExited
        // TODO add your handling code here:
        cerrarSesionTexto.setForeground(Color.BLACK);
    }//GEN-LAST:event_cerrarSesionTextoMouseExited

    private void atrasBotonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atrasBotonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_atrasBotonMouseClicked

    private void atrasBotonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atrasBotonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_atrasBotonMouseEntered

    private void atrasBotonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atrasBotonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_atrasBotonMouseExited

    private void atrasBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasBotonActionPerformed
        // TODO add your handling code here:
        InicioEmpresa ventanaInicioCliente = new InicioEmpresa();
        ventanaInicioCliente.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_atrasBotonActionPerformed

    private void unaEstrellaRBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unaEstrellaRBotonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unaEstrellaRBotonActionPerformed

    private void tresEstrellaRBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresEstrellaRBotonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tresEstrellaRBotonActionPerformed

    private void cuatroEstrellaRBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuatroEstrellaRBotonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuatroEstrellaRBotonActionPerformed

    private void cincoEstrellaRBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoEstrellaRBotonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cincoEstrellaRBotonActionPerformed

    private void calificarBotonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calificarBotonMouseEntered
        // TODO add your handling code here:
        calificarBoton.setForeground(Color.BLUE);
    }//GEN-LAST:event_calificarBotonMouseEntered

    private void calificarBotonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calificarBotonMouseExited
        // TODO add your handling code here:
        calificarBoton.setForeground(Color.BLACK);
    }//GEN-LAST:event_calificarBotonMouseExited

    private void calificarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calificarBotonActionPerformed

         if(!restaurantesLista.isSelectionEmpty())
         {
             if(unaEstrellaRBoton.isSelected())
             {
                //Asigno el valor de la calificacion
                double calificacion = 1;
                
                //Comienzo el proceso de actualizar las calificaciones
                String restauranteActualizar = restaurantesLista.getSelectedValue();
                String[] aux = restauranteActualizar.split(",");             //Solo me interesa el primer elemento que sera el nombre
                restauranteActualizar = aux[0];
                
                //Creo la lista que reemplazara a la actual de restaurantes
                ArrayList<Restaurante> listaAUX = new ArrayList<>();

                //Busco el restaurante que se quiere eliminar
                int index = -1;
                for (Restaurante restaurante : Sistema.getListaRestaurantes()) 
                {
                    index++;
                    if(restaurante.getCif().equals(restauranteActualizar))
                    {
                        double calificacionRes = Double.parseDouble(restaurante.getCalificacion());
                        //Hago la media de calificaciones
                        double calificacionFinal = (calificacionRes + calificacion)/2;
                        restaurante.setCalificacion(String.valueOf(calificacionFinal));
                    }
                    listaAUX.add(restaurante);
                }
                
                Sistema.setListaRestaurantes(listaAUX);

                //Guardo los datos
                Sistema.guardarDatosRestaurantes();
                
                //Informo al usuario
                JOptionPane.showMessageDialog(this, "Restaurante calificado con exito", "INFO"
                        , JOptionPane.INFORMATION_MESSAGE);

                //Actualizo la pagina
                CalificarRestauranteEmpresa reinicio = new CalificarRestauranteEmpresa();
                reinicio.setVisible(true);
                this.setVisible(false);
             }
             else if(dosEstrellaRBoton.isSelected())
             {
                //Asigno el valor de la calificacion
                double calificacion = 2;
                 
                //Comienzo el proceso de actualizar las calificaciones
                String restauranteActualizar = restaurantesLista.getSelectedValue();
                String[] aux = restauranteActualizar.split(",");             //Solo me interesa el primer elemento que sera el nombre
                restauranteActualizar = aux[0];
                
                //Creo la lista que reemplazara a la actual de restaurantes
                ArrayList<Restaurante> listaAUX = new ArrayList<>();

                //Busco el restaurante que se quiere eliminar
                int index = -1;
                for (Restaurante restaurante : Sistema.getListaRestaurantes()) 
                {
                    index++;
                    if(restaurante.getCif().equals(restauranteActualizar))
                    {
                        double calificacionRes = Double.parseDouble(restaurante.getCalificacion());
                        //Hago la media de calificaciones
                        double calificacionFinal = (calificacionRes + calificacion)/2;
                        restaurante.setCalificacion(String.valueOf(calificacionFinal));
                    }
                    listaAUX.add(restaurante);
                }
                
                Sistema.setListaRestaurantes(listaAUX);

                //Guardo los datos
                Sistema.guardarDatosRestaurantes();
                
                //Informo al usuario
                JOptionPane.showMessageDialog(this, "Restaurante calificado con exito", "INFO"
                        , JOptionPane.INFORMATION_MESSAGE);

                //Actualizo la pagina
                CalificarRestauranteEmpresa reinicio = new CalificarRestauranteEmpresa();
                reinicio.setVisible(true);
                this.setVisible(false);
             }
             else if(tresEstrellaRBoton.isSelected())
             {
                //Asigno el valor de la calificacion
                double calificacion = 3;
                
                //Comienzo el proceso de actualizar las calificaciones
                String restauranteActualizar = restaurantesLista.getSelectedValue();
                String[] aux = restauranteActualizar.split(",");             //Solo me interesa el primer elemento que sera el nombre
                restauranteActualizar = aux[0];
                
                //Creo la lista que reemplazara a la actual de restaurantes
                ArrayList<Restaurante> listaAUX = new ArrayList<>();

                //Busco el restaurante que se quiere eliminar
                int index = -1;
                for (Restaurante restaurante : Sistema.getListaRestaurantes()) 
                {
                    index++;
                    if(restaurante.getCif().equals(restauranteActualizar))
                    {
                        double calificacionRes = Double.parseDouble(restaurante.getCalificacion());
                        //Hago la media de calificaciones
                        double calificacionFinal = (calificacionRes + calificacion)/2;
                        restaurante.setCalificacion(String.valueOf(calificacionFinal));
                    }
                    listaAUX.add(restaurante);
                }
                
                Sistema.setListaRestaurantes(listaAUX);

                //Guardo los datos
                Sistema.guardarDatosRestaurantes();
                
                //Informo al usuario
                JOptionPane.showMessageDialog(this, "Restaurante calificado con exito", "INFO"
                        , JOptionPane.INFORMATION_MESSAGE);

                //Actualizo la pagina
                CalificarRestauranteEmpresa reinicio = new CalificarRestauranteEmpresa();
                reinicio.setVisible(true);
                this.setVisible(false);
             }
             else if(cuatroEstrellaRBoton.isSelected())
             {
                //Asigno el valor de la calificacion
                double calificacion = 4;
                 
                //Comienzo el proceso de actualizar las calificaciones
                String restauranteActualizar = restaurantesLista.getSelectedValue();
                String[] aux = restauranteActualizar.split(",");             //Solo me interesa el primer elemento que sera el nombre
                restauranteActualizar = aux[0];
                
                //Creo la lista que reemplazara a la actual de restaurantes
                ArrayList<Restaurante> listaAUX = new ArrayList<>();

                //Busco el restaurante que se quiere eliminar
                int index = -1;
                for (Restaurante restaurante : Sistema.getListaRestaurantes()) 
                {
                    index++;
                    if(restaurante.getCif().equals(restauranteActualizar))
                    {
                        double calificacionRes = Double.parseDouble(restaurante.getCalificacion());
                        //Hago la media de calificaciones
                        double calificacionFinal = (calificacionRes + calificacion)/2;
                        restaurante.setCalificacion(String.valueOf(calificacionFinal));
                    }
                    listaAUX.add(restaurante);
                }
                
                Sistema.setListaRestaurantes(listaAUX);

                //Guardo los datos
                Sistema.guardarDatosRestaurantes();
                
                //Informo al usuario
                JOptionPane.showMessageDialog(this, "Restaurante calificado con exito", "INFO"
                        , JOptionPane.INFORMATION_MESSAGE);

                //Actualizo la pagina
                CalificarRestauranteEmpresa reinicio = new CalificarRestauranteEmpresa();
                reinicio.setVisible(true);
                this.setVisible(false);
             }
             else if(cincoEstrellaRBoton.isSelected())
             {
                //Asigno el valor de la calificacion
                double calificacion = 5;
                 
                //Comienzo el proceso de actualizar las calificaciones
                String restauranteActualizar = restaurantesLista.getSelectedValue();
                String[] aux = restauranteActualizar.split(",");             //Solo me interesa el primer elemento que sera el nombre
                restauranteActualizar = aux[0];
                
                //Creo la lista que reemplazara a la actual de restaurantes
                ArrayList<Restaurante> listaAUX = new ArrayList<>();

                //Busco el restaurante que se quiere eliminar
                int index = -1;
                for (Restaurante restaurante : Sistema.getListaRestaurantes()) 
                {
                    index++;
                    if(restaurante.getCif().equals(restauranteActualizar))
                    {
                        double calificacionRes = Double.parseDouble(restaurante.getCalificacion());
                        //Hago la media de calificaciones
                        double calificacionFinal = (calificacionRes + calificacion)/2;
                        restaurante.setCalificacion(String.valueOf(calificacionFinal));
                    }
                    listaAUX.add(restaurante);
                }
                
                Sistema.setListaRestaurantes(listaAUX);

                //Guardo los datos
                Sistema.guardarDatosRestaurantes();
                
                //Informo al usuario
                JOptionPane.showMessageDialog(this, "Restaurante calificado con exito", "INFO"
                        , JOptionPane.INFORMATION_MESSAGE);

                //Actualizo la pagina
                CalificarRestauranteEmpresa reinicio = new CalificarRestauranteEmpresa();
                reinicio.setVisible(true);
                this.setVisible(false);
             }
             else
             {
                 JOptionPane.showMessageDialog(this, "Debe seleccionar una calificacion", "SIN CALIFICACION"
                         , JOptionPane.WARNING_MESSAGE);
             }
         }
         else
         {
             JOptionPane.showMessageDialog(this, "Debe seleccionar 1 restaurante", "SIN SELECCION"
                     ,JOptionPane.WARNING_MESSAGE );
         }

    }//GEN-LAST:event_calificarBotonActionPerformed

    private void dosEstrellaRBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dosEstrellaRBotonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dosEstrellaRBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalificarRestauranteEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalificarRestauranteEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalificarRestauranteEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalificarRestauranteEmpresa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalificarRestauranteEmpresa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BarraFunciones;
    private javax.swing.JPanel FondoVerdeDerecha;
    private javax.swing.JButton atrasBoton;
    private javax.swing.JPanel background;
    private javax.swing.JPanel botonExit;
    private javax.swing.ButtonGroup calificacionesBotonGroup;
    private javax.swing.JButton calificarBoton;
    private javax.swing.JLabel cerrarSesionTexto;
    private javax.swing.JRadioButton cincoEstrellaRBoton;
    private javax.swing.JLabel cincoEstrellas;
    private javax.swing.JRadioButton cuatroEstrellaRBoton;
    private javax.swing.JLabel cuatroEstrellas;
    private javax.swing.JRadioButton dosEstrellaRBoton;
    private javax.swing.JLabel dosEstrellas;
    private javax.swing.JLabel eatsTexto;
    private javax.swing.JLabel exitTexto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel javaTexto;
    private javax.swing.JList<String> restaurantesLista;
    private javax.swing.JLabel seleccioneUnRestaurantetexto;
    private javax.swing.JLabel seleccioneUnRestaurantetexto1;
    private javax.swing.JRadioButton tresEstrellaRBoton;
    private javax.swing.JLabel tresEstrellas;
    private javax.swing.JLabel unaEstrella;
    private javax.swing.JRadioButton unaEstrellaRBoton;
    // End of variables declaration//GEN-END:variables
}
